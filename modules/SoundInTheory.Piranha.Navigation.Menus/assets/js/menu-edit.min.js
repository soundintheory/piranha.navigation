Vue.component("navigation-menu-item",{props:["item","menu","level"],data:function(){return{isExpanded:!0}},methods:{toggle:function(){this.isExpanded=!this.isExpanded}},computed:{hasChildren:function(){return this.item.children&&0<this.item.children.length},typeName:function(){switch(this.item.link.type){case"Custom":return"Custom Link";case"None":return"Static Text"}return this.item.link.type}},template:'\n<li class="dd-item" :class="{ expanded: isExpanded || !hasChildren }" :data-id="item.id">\n    <div class="nav-menu-item" :class="{ dimmed: item.isUnpublished || item.isScheduled }">\n        <div v-if="piranha.navigation.permissions.menus.editItems" class="handle dd-handle"><i class="fas fa-ellipsis-v"></i></div>\n        <div class="link">\n            <span class="actions" v-if="hasChildren">\n                <a v-if="isExpanded" v-on:click.prevent="toggle()" class="expand" href="#"><i class="fas fa-minus"></i></a>\n                <a v-else v-on:click.prevent="toggle()" class="expand" href="#"><i class="fas fa-plus"></i></a>\n            </span>\n            <a v-if="piranha.navigation.permissions.menus.editItems" href="#" v-on:click.prevent="piranha.navigation.menuedit.editItem(item)">\n                <span>{{ item.link.text }}</span>\n            </a>\n            <span v-else class="title">\n                <span>{{ item.link.text }}</span>\n            </span>\n        </div>\n        <div class="type d-none d-md-block">{{ typeName }}</div>\n        <div class="actions">\n            <template v-if="piranha.navigation.permissions.menus.editItems">\n                <a v-if="!(menu.settings.enabledOptions && menu.settings.enabledOptions.includes(\'HideAddChildItem\')) && (level < menu.settings.maxDepth || !menu.settings.maxDepth)" href="#" v-on:click.prevent="piranha.navigation.menuedit.addItem({ parentId: item.id })" title="Add Child Item..."><i class="fas fa-angle-down"></i></a>\n                <a v-else class="disabled" href="#" style="visibility:hidden;"><i class="fas fa-angle-down"></i></a>\n                <a href="#" v-if="!(menu.settings.enabledOptions && menu.settings.enabledOptions.includes(\'HideAppendItem\'))" v-on:click.prevent="piranha.navigation.menuedit.addItem({ afterId: item.id })" title="Add Item After..."><i class="fas fa-angle-right"></i></a>\n                <a v-else class="disabled" href="#" style="visibility:hidden;"><i class="fas fa-angle-down"></i></a>\n            </template>\n            <a v-if="piranha.navigation.permissions.menus.deleteItems" v-on:click.prevent="piranha.navigation.menuedit.removeItem(item.id)" class="danger" href="#"><i class="fas fa-trash"></i></a>\n        </div>\n    </div>\n    <ol v-if="hasChildren" class="dd-list">\n        <navigation-menu-item v-for="child in item.children" v-bind:key="child.id" v-bind:item="child" v-bind:menu="menu" v-bind:level="(level || 0) + 1">\n        </navigation-menu-item>\n    </ol>\n</li>\n'}),piranha.navigation=piranha.navigation||{},piranha.navigation.menuedit=new Vue({el:"#menuedit",data:{loading:!0,menu:null,addSiteTitle:null,addToSiteId:null,addPageId:null,currentState:null},methods:{load:function(e){return this.baseApiUrl=piranha.baseUrl+"manager/api/navigation/menus/"+e,fetch(this.baseApiUrl).then(e=>e.json()).then(e=>{e.menu&&this.setMenu(e.menu)}).catch(e=>{console.log("error:",e)})},reload:function(){this.menu&&this.menu.id&&this.load(this.menu.id)},removeItem:function(e){piranha.alert.open({title:piranha.resources.texts.delete,body:"Are you sure you want to delete this item?",confirmCss:"btn-danger",confirmIcon:"fas fa-trash",confirmText:piranha.resources.texts.delete,onConfirm:()=>{fetch(this.baseApiUrl+"/items/"+e,{method:"delete",headers:piranha.utils.antiForgeryHeaders()}).then(e=>e.json()).then(e=>{piranha.notifications.push(e),this.reload()}).catch(e=>{console.log("error:",e)})}})},bind:function(){console.log("binding!"),$(".menu-container").each((e,n)=>{$(n).nestable({maxDepth:this.menu.settings.maxDepth||100,group:e,onDragStart:(e,n)=>{document.documentElement.classList.add("dd-dragging"),this.currentState=JSON.stringify($(e).nestable("serialize"))},beforeDragStop:(e,n)=>{document.documentElement.classList.remove("dd-dragging")},callback:(e,n)=>{document.documentElement.classList.remove("dd-dragging");e=$(e).nestable("serialize");JSON.stringify(e)!==this.currentState&&fetch(this.baseApiUrl+"/structure",{method:"post",headers:piranha.utils.antiForgeryHeaders(),body:JSON.stringify({menu:{id:this.menu.id,items:e}})}).then(e=>e.json()).then(e=>{"success"===e.status.type?this.setMenu(e.menu):piranha.notifications.push(e.status)}).catch(e=>{console.log("error:",e)})}})})},addItem:function(n){piranha.navigation.linkmodal.open(e=>{fetch(this.baseApiUrl+"/items",{method:"post",headers:piranha.utils.antiForgeryHeaders(),body:JSON.stringify({position:n,item:{link:e}})}).then(e=>e.json()).then(e=>{e.status&&(piranha.notifications.push(e.status),"success"===e.status.type)&&this.setMenu(e.menu)}).catch(e=>{console.log("error:",e)})},null)},editItem:function(n){piranha.navigation.linkmodal.open(e=>{n.link=e,fetch(this.baseApiUrl+"/items",{method:"post",headers:piranha.utils.antiForgeryHeaders(),body:JSON.stringify({item:{id:n.id,link:n.link,sortOrder:n.sortOrder,parentId:n.parentId,menuId:n.menuId}})}).then(e=>e.json()).then(e=>{e.status&&(piranha.notifications.push(e.status),"success"===e.status.type)&&this.setMenu(e.menu)}).catch(e=>{console.log("error:",e)})},n.link)},setMenu:function(e){console.log("setMenu: ",e),this.menu&&($(".menu-container").nestable("destroy"),this.menu=null),Vue.nextTick(()=>{this.menu=e,Vue.nextTick(()=>{this.bind(),this.loading=!1})})}},created:function(){}});