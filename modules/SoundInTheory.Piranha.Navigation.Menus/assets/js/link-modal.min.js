Vue.component("link-modal",{data:function(){return{callback:null,currentModel:this.getDefaults(),currentLink:null,linkModelBackup:null,itemTypeInternal:"Link",search:"",showAdvancedSettings:!1,links:[]}},mounted:function(){},computed:{showAdvancedSettingsText:function(){return this.showAdvancedSettings?"Hide advanced settings...":"Show advanced settings..."},targetBlank:{get:function(){return"_blank"===this.currentModel.attributes.target},set:function(t){this.currentModel.attributes.target=t?"_blank":null}},nofollow:{get:function(){return"nofollow"===this.currentModel.attributes.rel},set:function(t){this.currentModel.attributes.rel=t?"nofollow":null}},itemType:{get:function(){return this.itemTypeInternal},set:function(t){"None"===t?("None"!==this.itemTypeInternal&&(this.linkModelBackup=JSON.parse(JSON.stringify(this.currentModel))),this.currentModel=Object.assign(this.getDefaults(),{type:"None",text:this.currentModel.text})):"None"===this.itemTypeInternal&&this.linkModelBackup&&(this.currentModel=Object.assign(this.linkModelBackup,{text:this.currentModel.text}),this.linkModelBackup=null,this.initSelect2()),this.itemTypeInternal=t}},canUseContentTitle:function(){return this.currentModel&&this.currentModel.contentLink&&"Page"===this.currentModel.type||"Post"===this.currentModel.type}},watch:{"currentModel.useContentTitle":function(t){t&&this.currentModel.useContentTitle&&this.canUseContentTitle&&(this.currentModel.text=this.currentModel.contentLink.text)}},methods:{save:function(){this.callback&&(this.callback(JSON.parse(JSON.stringify(this.currentModel))),this.callback=null),$(this.$refs.modal).modal("hide")},open:function(t,e){this.callback=e,this.setCurrentModel(t),$(this.$refs.modal).modal("show")},toggleAdvancedSettings:function(){this.showAdvancedSettings=!this.showAdvancedSettings},selectLink:function(t){(this.currentModel.contentLink=t)?(this.currentModel.url=t.url,this.currentModel.type=t.type,this.currentModel.id=t.id,this.currentModel.useContentTitle?this.currentModel.text=t.text:this.currentModel.text||(this.currentModel.useContentTitle=!0)):(this.currentModel.type="Custom",this.currentModel.id=null,this.currentModel.useContentTitle=!1)},setCurrentModel:function(t){console.log("setting current model: ",t),this.currentModel=t?Object.assign(this.getDefaults(),t):this.getDefaults(),this.itemType="None"===this.currentModel.type?"None":"Link",this.currentModel.attributes||(this.currentModel.attributes=this.getDefaults().attributes),this.initSelect2(10)},initSelect2:function(t){var e=$(this.$refs.existingContentSelect),n=this.currentModel&&this.currentModel.contentLink?this.currentModel.contentLink:null;e.hasClass("select2-hidden-accessible")&&e.select2("destroy"),e.empty(),setTimeout(()=>{e.select2({theme:"bootstrap4",allowClear:!0,dropdownParent:this.$refs.dropdownContainer,minimumInputLength:2,placeholder:"Select existing content to link to",data:n?[n]:null,ajax:{url:"/manager/api/links/all",dataType:"json",delay:250,data:t=>({search:t.term}),processResults:t=>({results:t||[]})},templateResult:t=>t.id?$('<span><span class="badge badge-light">'+t.type+"</span> "+t.text+"</span>"):t.text,templateSelection:t=>t.id?$('<span><span class="badge badge-info">'+t.type+"</span> "+t.text+"</span>"):t.text}).on("select2:open",t=>{var e=$(t.currentTarget).data("select2").$dropdown.find(".select2-search__field").eq(0);0<e.length&&(e.attr("placeholder","Start typing to search..."),setTimeout(()=>{e[0].focus()},5))}).on("select2:select",t=>{t=t.params?t.params.data:null;this.selectLink(t)}).on("select2:clear",t=>{this.selectLink(null),setTimeout(()=>{$(t.currentTarget).select2("close")})})},t||0===t?t:10)},getDefaults:function(){return{id:null,type:"Custom",url:null,text:null,contentLink:null,useContentTitle:!1,attributes:{class:null,target:null,rel:null}}}},template:'\n<div class="modal modal-panel fade" id="linkmodal" ref="modal">\n    <div class="modal-dialog modal-lg">\n        <div class="modal-content">\n            \x3c!-- Modal Header --\x3e\n            <div class="modal-header border-bottom-0">\n                <h5 class="modal-title"><i class="fas fa-link mr-1"></i> Edit Menu Item</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n\n            \x3c!-- Modal Body --\x3e\n            <div class="modal-body bg-light" v-if="currentModel" ref="modalBody">\n                <div class="form-group row">\n                    <label class="col-sm-2 col-form-label" for="link-text-input">Type</label>\n                    <div class="col-sm-10">\n                        <select id="link-type-input" class="form-control" v-model="itemType">\n                            <option disabled value="">Please select a type</option>\n                            <option value="Link">Link</option>\n                            <option value="None">Static Text</option>\n                        </select>\n                    </div>\n                </div>\n                <template v-if="itemType === \'None\'">\n                    <div class="form-group row">\n                        <label class="col-sm-2 col-form-label" for="link-text-input">Text</label>\n                        <div class="col-sm-10">\n                            <input id="link-text-input" class="form-control" type="text" v-model="currentModel.text">\n                        </div>\n                    </div>\n                </template>\n                <template v-else>\n                    <div class="form-group row">\n                        <label class="col-sm-2 col-form-label" for="link-text-input">Link Text</label>\n                        <div class="col-sm-10">\n                            <template v-if="canUseContentTitle">\n                                <div class="input-group">\n                                    <input id="link-text-input" class="form-control" type="text" v-model="currentModel.text" :disabled="currentModel.useContentTitle">\n                                    <div class="input-group-append">\n                                        <label class="input-group-text form-check">\n                                            <input type="checkbox" class="form-check-input" v-model="currentModel.useContentTitle">\n                                            Use {{currentModel.type.toLowerCase()}} title\n                                        </label>\n                                    </div>\n                                </div>\n                            </template>\n                            <template v-else>\n                                <input id="link-text-input" class="form-control" type="text" v-model="currentModel.text">\n                            </template>\n                        </div>\n                    </div>\n                    <div class="form-group row">\n                        <label class="col-sm-2 col-form-label" for="link-url-input">Link</label>\n                        <div class="col-sm-10">\n                            <input id="link-url-input" class="form-control" type="text" ref="urlInput" v-model="currentModel.url" :disabled="currentModel.type != \'Custom\'">\n                        </div>\n                    </div>\n                    <div class="row mb-4">\n                        <div class="col-sm-2"></div>\n                        <div class="col-sm-10">\n                            <select class="form-control" ref="existingContentSelect"></select>\n                            <div ref="dropdownContainer" class="select2-dropdown-inline"></div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- div class="form-group row">\n                        <label class="col-sm-2 col-form-label" for="link-html-class">HTML Class</label>\n                        <div class="col-sm-10">\n                            <input id="link-html-class" class="form-control" type="text" v-model="currentModel.attributes.class">\n                        </div>\n                    </div --\x3e\n                    <div class="row justify-content-end mb-4">\n                        <div class="col-sm-10">\n                            <div class="row">\n                                <div class="col-auto">\n                                    <div class="custom-control custom-checkbox">\n                                        <input type="checkbox" class="custom-control-input" id="link-target-blank-input" v-model="targetBlank">\n                                        <label class="custom-control-label" for="link-target-blank-input">Open in a new tab</label>\n                                    </div>\n                                </div>\n                                <div class="col-auto">\n                                    <div class="custom-control custom-checkbox">\n                                        <input type="checkbox" class="custom-control-input" id="link-nofollow-input" v-model="nofollow">\n                                        <label class="custom-control-label" for="link-nofollow-input">No follow</label>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </template>\n            </div>\n            <div class="modal-footer">\n                <button class="btn btn-primary" v-on:click="save()">Save</button>\n                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n            </div>\n        </div>\n    </div>\n</div>\n'}),piranha.navigation=piranha.navigation||{},piranha.navigation.linkmodal=new Vue({name:"Link Modal",data:function(){return{}},methods:{open:function(t,e){this.init(),this.$refs.modal.open(JSON.parse(JSON.stringify(e||this.$refs.modal.getDefaults())),t)},init:function(){this._isMounted||($("#linkmodalwrap").remove(),$(document.body).append('<div id="linkmodalwrap"><link-modal ref="modal"></link-modal></div>'),this.$mount("#linkmodalwrap"))}}});